{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jblair\\\\Desktop\\\\React\\\\sitehawk-communicator-ui\\\\src\\\\components\\\\user-management\\\\user-management.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Grid, GridColumn as Column } from '@progress/kendo-react-grid';\nimport \"../user-management/user-management.css\";\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../../styles/ledgers/ledgers.css\";\nimport '../../../node_modules/@progress/kendo-theme-bootstrap/dist/all.css';\n\nclass UserManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      size: 25\n    };\n  }\n\n  componentDidMount() {\n    this.getUsers(233, 1, this.state.size);\n  }\n\n  async getUsers(facilityId) {\n    await fetch(`/api/v1/Facility/${facilityId}/Users`, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        users: data\n      });\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n\n  render() {\n    function UserStatus(props) {\n      const myUserStatus = props.status;\n\n      if (myUserStatus) {\n        return \"Active\";\n      }\n\n      return \"Inactive\";\n    }\n\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"userManagementHeader\",\n      className: \"ledgerTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"User Management\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      style: {\n        height: \"430px\"\n      },\n      data: this.state.users,\n      sortable: true,\n      pageSize: 25,\n      pageable: true,\n      total: this.state.users.length,\n      filterable: true,\n      reorderable: true,\n      resizable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Column, {\n      field: \"lastName\",\n      title: \"Last Name\",\n      width: \"300px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Column, {\n      field: \"firstName\",\n      title: \"First Name\",\n      width: \"300px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Column, {\n      field: \"userName\",\n      title: \"User Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Column, {\n      field: \"userType.name\",\n      title: \"User Type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Column, {\n      field: \"status\",\n      title: \"Status\",\n      width: \"150px\",\n      filter: \"boolean\",\n      cell: props => React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(UserStatus, {\n        status: props.dataItem[props.field],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default UserManagement;","map":{"version":3,"sources":["C:/Users/jblair/Desktop/React/sitehawk-communicator-ui/src/components/user-management/user-management.js"],"names":["React","ReactDOM","Grid","GridColumn","Column","UserManagement","Component","constructor","props","state","users","size","componentDidMount","getUsers","facilityId","fetch","method","headers","localStorage","getItem","then","response","json","data","setState","catch","error","console","render","UserStatus","myUserStatus","status","height","length","dataItem","field"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { Grid, GridColumn as Column } from '@progress/kendo-react-grid';\r\n\r\nimport \"../user-management/user-management.css\";\r\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"../../styles/ledgers/ledgers.css\";\r\nimport '../../../node_modules/@progress/kendo-theme-bootstrap/dist/all.css';\r\n\r\nclass UserManagement extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        users: [],\r\n        size: 25,\r\n      };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUsers(233, 1, this.state.size);\r\n  }\r\n\r\n\r\n  async getUsers(facilityId) {\r\n    await fetch(`/api/v1/Facility/${facilityId}/Users`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      this.setState({\r\n        users: data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    function UserStatus(props) {\r\n        const myUserStatus = props.status;\r\n        if (myUserStatus) {\r\n          return \"Active\";\r\n        }\r\n        return \"Inactive\";\r\n      }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n        <div id=\"userManagementHeader\" className=\"ledgerTitle\">User Management</div>\r\n        <br/>\r\n        <div>\r\n            <Grid\r\n                style={{ height: \"430px\" }}\r\n                data={this.state.users} \r\n                sortable={true}\r\n                pageSize={25}\r\n                pageable={true}\r\n                total={this.state.users.length}\r\n                filterable={true}\r\n                reorderable={true}\r\n                resizable={true}\r\n                >\r\n                <Column field=\"lastName\" title=\"Last Name\" width=\"300px\" />\r\n                <Column field=\"firstName\" title=\"First Name\" width=\"300px\" />\r\n                <Column field=\"userName\" title=\"User Name\" />\r\n                <Column field=\"userType.name\" title=\"User Type\" />\r\n                <Column\r\n                    field=\"status\" title=\"Status\" width=\"150px\" filter=\"boolean\"\r\n                    cell={props => (\r\n                        <td>\r\n                            <UserStatus status={props.dataItem[props.field]}/>\r\n                        </td>\r\n                    )}\r\n                />\r\n            </Grid>\r\n        </div>  \r\n        </div>\r\n    )\r\n  }\r\n} \r\n\r\nexport default UserManagement;"]},"metadata":{},"sourceType":"module"}