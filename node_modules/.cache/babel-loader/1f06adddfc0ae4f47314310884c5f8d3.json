{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jblair\\\\Desktop\\\\React\\\\sitehawk-communicator-ui\\\\src\\\\components\\\\user-management\\\\user-management.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Grid, GridColumn as Column } from '@progress/kendo-react-grid';\nimport \"../user-management/user-management.css\";\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../../styles/ledgers/ledgers.css\";\nimport '../../../node_modules/@progress/kendo-theme-bootstrap/dist/all.css';\n\nclass UserManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    this.getUsers(233, 1, 25);\n  }\n\n  async getUsers(facilityId, pageIndex, pageSize) {\n    await fetch(`/api/v1/Facility/${facilityId}/Users?pageIndex=${pageIndex}&pageSize=${pageSize}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        users: data\n      });\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n\n  render() {\n    function UserManagementGrid(props) {\n      return React.createElement(Grid, {\n        style: {\n          height: '400px'\n        },\n        data: [props.users],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Column, {\n        field: \"props.users.lastname\",\n        title: \"Last Name\",\n        width: \"250px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Column, {\n        field: \"\",\n        title: \"First Name\",\n        width: \"250px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Column, {\n        field: \"\",\n        title: \"User Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Column, {\n        field: \"\",\n        title: \"User Type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Column, {\n        field: \"\",\n        title: \"Status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chemicalAreaLedgerHeader\",\n      className: \"ledgerTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"User Management\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(UserManagementGrid, {\n      users: this.state.users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default UserManagement;","map":{"version":3,"sources":["C:/Users/jblair/Desktop/React/sitehawk-communicator-ui/src/components/user-management/user-management.js"],"names":["React","ReactDOM","Grid","GridColumn","Column","UserManagement","Component","constructor","props","state","users","componentDidMount","getUsers","facilityId","pageIndex","pageSize","fetch","method","headers","localStorage","getItem","then","response","json","data","setState","catch","error","console","render","UserManagementGrid","height"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { Grid, GridColumn as Column } from '@progress/kendo-react-grid';\r\n\r\nimport \"../user-management/user-management.css\";\r\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"../../styles/ledgers/ledgers.css\";\r\nimport '../../../node_modules/@progress/kendo-theme-bootstrap/dist/all.css';\r\n\r\nclass UserManagement extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        users: [],\r\n      };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUsers(233, 1, 25);\r\n  }\r\n\r\n  async getUsers(facilityId, pageIndex, pageSize) {\r\n    await fetch(`/api/v1/Facility/${facilityId}/Users?pageIndex=${pageIndex}&pageSize=${pageSize}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      this.setState({\r\n        users: data,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    function UserManagementGrid(props) {\r\n        return (\r\n            <Grid\r\n                style={{ height: '400px' }}\r\n                data={[props.users]}\r\n            >\r\n                <Column field=\"props.users.lastname\" title=\"Last Name\" width=\"250px\" />\r\n                <Column field=\"\" title=\"First Name\" width=\"250px\" />\r\n                <Column field=\"\" title=\"User Name\" />\r\n                <Column field=\"\" title=\"User Type\" />\r\n                <Column field=\"\" title=\"Status\" />\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n        <div id=\"chemicalAreaLedgerHeader\" className=\"ledgerTitle\">User Management</div>\r\n        <br/>\r\n        <div>\r\n          <UserManagementGrid users={this.state.users}/>\r\n        </div>  \r\n        </div>\r\n    )\r\n  }\r\n} \r\n\r\nexport default UserManagement;"]},"metadata":{},"sourceType":"module"}