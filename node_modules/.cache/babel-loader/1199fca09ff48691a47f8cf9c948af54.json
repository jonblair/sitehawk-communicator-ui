{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jblair\\\\Desktop\\\\React\\\\sitehawk-communicator-ui\\\\src\\\\components\\\\user-management\\\\user-management.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Grid, GridColumn as Column } from '@progress/kendo-react-grid';\nimport \"../user-management/user-management.css\";\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../../styles/ledgers/ledgers.css\";\nimport '../../../node_modules/@progress/kendo-theme-bootstrap/dist/all.css';\n\nclass UserManagement extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.pageChange = event => {\n      this.setState({\n        page: event.page.skip,\n        size: event.page.take\n      });\n    };\n\n    this.state = {\n      users: [],\n      page: 1,\n      size: 25\n    };\n  }\n\n  componentDidMount() {\n    this.getUsers(233, this.state.page, this.state.size);\n  }\n\n  async getUsers(facilityId, pageIndex, pageSize) {\n    await fetch(`/api/v1/Facility/${facilityId}/Users?pageIndex=${pageIndex}&pageSize=${pageSize}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        users: data\n      });\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n\n  render() {\n    function UserManagementGrid(props) {\n      function UserStatus(props) {\n        const myUserStatus = props.status;\n\n        if (myUserStatus) {\n          return \"Active\";\n        }\n\n        return \"Inactive\";\n      }\n\n      return React.createElement(Grid, {\n        style: {\n          height: '400px'\n        },\n        data: props.Users,\n        page: this.state.page,\n        size: this.state.size,\n        total: props.Users.length,\n        pageable: true,\n        onPageChange: this.pageChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Column, {\n        field: \"lastName\",\n        title: \"Last Name\",\n        width: \"200px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(Column, {\n        field: \"firstName\",\n        title: \"First Name\",\n        width: \"200px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(Column, {\n        field: \"userName\",\n        title: \"User Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(Column, {\n        field: \"userType.name\",\n        title: \"User Type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(Column, {\n        field: \"status\",\n        title: \"Status\",\n        cell: props => React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(UserStatus, {\n          status: props.dataItem[props.field],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chemicalAreaLedgerHeader\",\n      className: \"ledgerTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"User Management\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(UserManagementGrid, {\n      Users: this.state.users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default UserManagement;","map":{"version":3,"sources":["C:/Users/jblair/Desktop/React/sitehawk-communicator-ui/src/components/user-management/user-management.js"],"names":["React","ReactDOM","Grid","GridColumn","Column","UserManagement","Component","constructor","props","pageChange","event","setState","page","skip","size","take","state","users","componentDidMount","getUsers","facilityId","pageIndex","pageSize","fetch","method","headers","localStorage","getItem","then","response","json","data","catch","error","console","render","UserManagementGrid","UserStatus","myUserStatus","status","height","Users","length","dataItem","field"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { Grid, GridColumn as Column } from '@progress/kendo-react-grid';\r\n\r\nimport \"../user-management/user-management.css\";\r\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"../../styles/ledgers/ledgers.css\";\r\nimport '../../../node_modules/@progress/kendo-theme-bootstrap/dist/all.css';\r\n\r\nclass UserManagement extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        users: [],\r\n        page: 1,\r\n        size: 25,\r\n      };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUsers(233, this.state.page, this.state.size);\r\n  }\r\n\r\n  pageChange = (event) => {\r\n    this.setState({\r\n        page: event.page.skip,\r\n        size: event.page.take\r\n    });\r\n}\r\n\r\n  async getUsers(facilityId, pageIndex, pageSize) {\r\n    await fetch(`/api/v1/Facility/${facilityId}/Users?pageIndex=${pageIndex}&pageSize=${pageSize}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      this.setState({\r\n        users: data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    function UserManagementGrid(props) {\r\n\r\n        function UserStatus(props) {\r\n            const myUserStatus = props.status;\r\n            if (myUserStatus) {\r\n              return \"Active\";\r\n            }\r\n            return \"Inactive\";\r\n          }\r\n\r\n        return (\r\n            <Grid\r\n                style={{ height: '400px' }}\r\n                data={props.Users} \r\n                page={this.state.page}\r\n                size={this.state.size}\r\n                total={props.Users.length}\r\n                pageable={true}\r\n                onPageChange={this.pageChange}\r\n                >\r\n                <Column field=\"lastName\" title=\"Last Name\" width=\"200px\" />\r\n                <Column field=\"firstName\" title=\"First Name\" width=\"200px\" />\r\n                <Column field=\"userName\" title=\"User Name\" />\r\n                <Column field=\"userType.name\" title=\"User Type\" />\r\n                <Column\r\n                    field=\"status\" title=\"Status\"\r\n                    cell={props => (\r\n                        <td>\r\n                            <UserStatus status={props.dataItem[props.field]}/>\r\n                        </td>\r\n                    )}\r\n                />\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n        <div id=\"chemicalAreaLedgerHeader\" className=\"ledgerTitle\">User Management</div>\r\n        <br/>\r\n        <div>\r\n          <UserManagementGrid Users={this.state.users}/>\r\n        </div>  \r\n        </div>\r\n    )\r\n  }\r\n} \r\n\r\nexport default UserManagement;"]},"metadata":{},"sourceType":"module"}