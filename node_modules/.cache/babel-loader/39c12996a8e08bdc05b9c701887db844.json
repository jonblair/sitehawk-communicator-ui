{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jblair\\\\Desktop\\\\React\\\\sitehawk-communicator-ui\\\\src\\\\components\\\\login-form\\\\login-form.js\";\nimport React from \"react\";\nimport \"../login-form/login-form.css\";\nimport { withRouter } from 'react-router-dom';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = ({\n      target\n    }) => {\n      this.setState({\n        [target.name]: target.value\n      });\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      corporationid: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    await this.login(this.state.username, this.state.password, this.state.corporationid); //this.props.history.push('/default');\n    // if (localStorage.getItem('token') !== undefined) {\n    //   this.props.history.push('/default');\n    // }\n  }\n\n  async login(myUsername, myPassword, myCorporationId) {\n    await fetch('/api/v1/Authorize', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: myUsername,\n        password: myPassword,\n        corporationId: myCorporationId\n      })\n    }).then(response => {\n      //response.json();\n      if (response.status === 200) {\n        console.log(response.status); //localStorage.setItem('token', response.data.accessToken)\n      }\n    }).then(data => {\n      localStorage.setItem('token', data.accessToken);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wrap loginFields\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"LoginHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Communicator Login\"), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loginEntry\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"txtBxUserName\",\n      type: \"text\",\n      id: \"txtBxUserName\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      className: \"textEntry\",\n      placeholder: \"Login Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"txtBxPassword\",\n      id: \"txtBxPassword\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      className: \"textEntry\",\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"txtBxCompanyId\",\n      type: \"text\",\n      id: \"txtBxCompanyId\",\n      name: \"corporationid\",\n      value: this.state.corporationid,\n      onChange: this.handleChange,\n      className: \"textEntry\",\n      placeholder: \"Company ID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      name: \"btnLoginButton\",\n      value: \"Log In\",\n      id: \"btnLoginButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"ssl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"TLS Enabled\")));\n  }\n\n}\n\nexport default withRouter(LoginForm);","map":{"version":3,"sources":["C:/Users/jblair/Desktop/React/sitehawk-communicator-ui/src/components/login-form/login-form.js"],"names":["React","withRouter","LoginForm","Component","constructor","props","handleChange","target","setState","name","value","state","username","password","corporationid","bind","handleSubmit","e","preventDefault","login","myUsername","myPassword","myCorporationId","fetch","method","headers","body","JSON","stringify","corporationId","then","response","status","console","log","data","localStorage","setItem","accessToken","catch","error","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"../login-form/login-form.css\";\r\nimport { withRouter } from 'react-router-dom' \r\n\r\nclass LoginForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { username: '', password: '', corporationid: '' };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n    await this.login(this.state.username, this.state.password, this.state.corporationid);\r\n    //this.props.history.push('/default');\r\n\r\n    // if (localStorage.getItem('token') !== undefined) {\r\n    //   this.props.history.push('/default');\r\n    // }\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({ [target.name]: target.value });\r\n };\r\n\r\n  async login(myUsername, myPassword, myCorporationId) {\r\n    await fetch('/api/v1/Authorize', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({username: myUsername, password: myPassword, corporationId: myCorporationId}),\r\n    })\r\n    .then((response) => { \r\n      //response.json();\r\n      if (response.status === 200)\r\n      {\r\n        console.log(response.status);\r\n        //localStorage.setItem('token', response.data.accessToken)\r\n      }\r\n    })\r\n    .then((data) => {\r\n      localStorage.setItem('token', data.accessToken);\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrap loginFields\">\r\n        <div id=\"login\">\r\n          <div id=\"LoginHeader\">Communicator Login</div>\r\n          <React.Fragment>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <div className=\"loginEntry\">\r\n                <input name=\"txtBxUserName\" type=\"text\" id=\"txtBxUserName\" name=\"username\" value={this.state.username}\r\n                onChange={this.handleChange} className=\"textEntry\" placeholder=\"Login Name\"></input>\r\n                <input name=\"txtBxPassword\" id=\"txtBxPassword\" name=\"password\" value={this.state.password}\r\n                onChange={this.handleChange} className=\"textEntry\" type=\"password\" placeholder=\"Password\"></input>\r\n                <input name=\"txtBxCompanyId\" type=\"text\" id=\"txtBxCompanyId\" name=\"corporationid\" value={this.state.corporationid}\r\n                onChange={this.handleChange} className=\"textEntry\" placeholder=\"Company ID\"></input>\r\n              </div>\r\n              <input type=\"submit\" name=\"btnLoginButton\" value=\"Log In\" id=\"btnLoginButton\" />\r\n            </form>\r\n          </React.Fragment>\r\n        </div>\r\n        <br/>\r\n        <div id=\"ssl\">\r\n            <p>TLS Enabled</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n} \r\n\r\nexport default withRouter(LoginForm);"]},"metadata":{},"sourceType":"module"}