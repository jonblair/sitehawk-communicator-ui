{"ast":null,"code":"import React from \"react\";\nexport const authenicationService = {\n  login,\n  logout,\n  getAll\n};\nconst apiBaseUrl = 'https://apiuat.spheracloud.net/';\n\nasync function login(username, password, corporateId) {\n  const requestBody = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      userName: username,\n      password: password,\n      corporateId: corporateId\n    })\n  };\n  return fetch(\"\".concat(apiBaseUrl, \"/authenticate\"), requestBody).then(Response.text().then(testx => {\n    const data = JSON.parse(text);\n    console.log(data);\n  })).then(token => {\n    if (token) {\n      localStorage.setItem('token');\n    } // // login successful if there's a user in the response\n    // if (user) {\n    //     // store user details and basic auth credentials in local storage \n    //     // to keep user logged in between page refreshes\n    //     user.authdata = window.btoa(username + ':' + password);\n    //     localStorage.setItem('user', JSON.stringify(user));\n    // }\n\n\n    return user;\n  });\n}","map":{"version":3,"sources":["C:/Users/jblair/Desktop/React/sitehawk-communicator-ui/src/services/authentication.service.js"],"names":["React","authenicationService","login","logout","getAll","apiBaseUrl","username","password","corporateId","requestBody","method","headers","body","JSON","stringify","userName","fetch","then","Response","text","testx","data","parse","console","log","token","localStorage","setItem","user"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,oBAAoB,GAAG;AAChCC,EAAAA,KADgC;AAEhCC,EAAAA,MAFgC;AAGhCC,EAAAA;AAHgC,CAA7B;AAMP,MAAMC,UAAU,GAAG,iCAAnB;;AAEA,eAAeH,KAAf,CAAqBI,QAArB,EAA+BC,QAA/B,EAAyCC,WAAzC,EAAsD;AAClD,QAAMC,WAAW,GAAE;AACfC,IAAAA,MAAM,EAAE,MADO;AAEfC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFM;AAGfC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,QAAQ,EAAET,QAAZ;AAAsBC,MAAAA,QAAQ,EAAEA,QAAhC;AAA0CC,MAAAA,WAAW,EAAEA;AAAvD,KAAf;AAHS,GAAnB;AAMA,SAAOQ,KAAK,WAAIX,UAAJ,oBAA+BI,WAA/B,CAAL,CACFQ,IADE,CAECC,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBG,KAAK,IAAI;AAC1B,UAAMC,IAAI,GAAGR,IAAI,CAACS,KAAL,CAAWH,IAAX,CAAb;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,GAHD,CAFD,EAOFJ,IAPE,CAOGQ,KAAK,IAAI;AACX,QAAIA,KAAJ,EAAW;AACPC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB;AACH,KAHU,CAIX;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAAOC,IAAP;AACH,GApBE,CAAP;AAqBH","sourcesContent":["import React from \"react\";\r\n\r\nexport const authenicationService = {\r\n    login,\r\n    logout,\r\n    getAll\r\n};\r\n\r\nconst apiBaseUrl = 'https://apiuat.spheracloud.net/';\r\n\r\nasync function login(username, password, corporateId) {\r\n    const requestBody= {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ userName: username, password: password, corporateId: corporateId })\r\n    };\r\n\r\n    return fetch(`${apiBaseUrl}/authenticate`, requestBody)\r\n        .then(\r\n            Response.text().then(testx => {\r\n                const data = JSON.parse(text);\r\n                console.log(data);\r\n            })\r\n        )\r\n        .then(token => {\r\n            if (token) {\r\n                localStorage.setItem('token', );\r\n            }\r\n            // // login successful if there's a user in the response\r\n            // if (user) {\r\n            //     // store user details and basic auth credentials in local storage \r\n            //     // to keep user logged in between page refreshes\r\n            //     user.authdata = window.btoa(username + ':' + password);\r\n            //     localStorage.setItem('user', JSON.stringify(user));\r\n            // }\r\n\r\n            return user;\r\n        });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}