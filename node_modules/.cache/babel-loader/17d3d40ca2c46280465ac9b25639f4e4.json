{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jblair\\\\Desktop\\\\React\\\\sitehawk-communicator-ui\\\\src\\\\components\\\\chemical-area-ledger\\\\chemical-area-ledger.js\";\nimport React from \"react\";\nimport \"../chemical-area-ledger/chemical-area-ledger.css\";\nimport \"../../styles/ledgers/ledgers.css\";\nimport { TreeView } from '@progress/kendo-react-treeview';\n\nclass ChemicalAreaLedger extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onItemClick = event => {\n      event.item.selected = !event.item.selected;\n      this.forceUpdate();\n    };\n\n    this.onExpandChange = event => {\n      event.item.expanded = !event.item.expanded;\n      this.forceUpdate();\n    };\n\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    this.getChemicalAreas(233, 1, 100);\n  }\n\n  async getChemicalAreas(facilityId, pageIndex, pageSize) {\n    await fetch(`/api/v1/Facility/${facilityId}/ChemicalAreas?pageIndex=${pageIndex}&pageSize=${pageSize}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      var myChemicalAreas = data;\n      this.setState({\n        data: myChemicalAreas\n      }); //console.log(this.state.data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n\n  render() {\n    const myChemicalAreas = this.state.data.map(myChemicalArea => {\n      return React.createElement(TreeView, {\n        data: myChemicalArea,\n        textField: myChemicalArea.name,\n        expandIcons: true,\n        onExpandChange: this.onExpandChange,\n        onItemClick: this.onItemClick,\n        \"aria-multiselectable\": true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    }); //const myChemicalAreasJson = JSON.stringify(myChemicalAreas);\n\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chemicalAreaLedgerHeader\",\n      className: \"ledgerTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Chemical Area Ledger\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, myChemicalAreas));\n  }\n\n}\n\nexport default ChemicalAreaLedger;","map":{"version":3,"sources":["C:/Users/jblair/Desktop/React/sitehawk-communicator-ui/src/components/chemical-area-ledger/chemical-area-ledger.js"],"names":["React","TreeView","ChemicalAreaLedger","Component","constructor","props","onItemClick","event","item","selected","forceUpdate","onExpandChange","expanded","state","data","componentDidMount","getChemicalAreas","facilityId","pageIndex","pageSize","fetch","method","headers","localStorage","getItem","then","response","json","myChemicalAreas","setState","catch","error","console","render","map","myChemicalArea","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kDAAP;AACA,OAAO,kCAAP;AAEA,SAASC,QAAT,QAAyB,gCAAzB;;AAEA,MAAMC,kBAAN,SAAiCF,KAAK,CAACG,SAAvC,CAAiD;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmCnBC,WAnCmB,GAmCJC,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACC,IAAN,CAAWC,QAAX,GAAsB,CAACF,KAAK,CAACC,IAAN,CAAWC,QAAlC;AACA,WAAKC,WAAL;AACD,KAtCkB;;AAAA,SAwCnBC,cAxCmB,GAwCDJ,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,IAAN,CAAWI,QAAX,GAAsB,CAACL,KAAK,CAACC,IAAN,CAAWI,QAAlC;AACA,WAAKF,WAAL;AACH,KA3CkB;;AAGjB,SAAKG,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,gBAAL,CAAsB,GAAtB,EAA2B,CAA3B,EAA8B,GAA9B;AACD;;AAED,QAAMA,gBAAN,CAAuBC,UAAvB,EAAmCC,SAAnC,EAA8CC,QAA9C,EAAwD;AACtD,UAAMC,KAAK,CAAE,oBAAmBH,UAAW,4BAA2BC,SAAU,aAAYC,QAAS,EAA1F,EAA6F;AACtGE,MAAAA,MAAM,EAAE,KAD8F;AAEtGC,MAAAA,OAAO,EAAE;AACP,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADtB;AAEP,wBAAgB;AAFT;AAF6F,KAA7F,CAAL,CAOLC,IAPK,CAOCC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPd,EAQLF,IARK,CAQCX,IAAD,IAAU;AACd,UAAIc,eAAe,GAAGd,IAAtB;AAEA,WAAKe,QAAL,CAAc;AACZf,QAAAA,IAAI,EAAEc;AADM,OAAd,EAHc,CAOd;AACD,KAhBK,EAiBLE,KAjBK,CAiBEC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACD,KAnBK,CAAN;AAoBD;;AAYDE,EAAAA,MAAM,GAAG;AACP,UAAML,eAAe,GAAG,KAAKf,KAAL,CAAWC,IAAX,CAAgBoB,GAAhB,CAAqBC,cAAD,IAAoB;AAC9D,aACE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAEA,cADR;AAEE,QAAA,SAAS,EAAEA,cAAc,CAACC,IAF5B;AAGE,QAAA,WAAW,EAAE,IAHf;AAIE,QAAA,cAAc,EAAE,KAAKzB,cAJvB;AAKE,QAAA,WAAW,EAAE,KAAKL,WALpB;AAME,gCAAsB,IANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD,KAXuB,CAAxB,CADO,CAaP;;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,EAAE,EAAC,0BAAR;AAAmC,MAAA,SAAS,EAAC,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCsB,eADD,CAHA,CADJ;AASD;;AAtE8C;;AAyEjD,eAAe1B,kBAAf","sourcesContent":["import React from \"react\";\r\nimport \"../chemical-area-ledger/chemical-area-ledger.css\";\r\nimport \"../../styles/ledgers/ledgers.css\";\r\n\r\nimport { TreeView } from '@progress/kendo-react-treeview';\r\n\r\nclass ChemicalAreaLedger extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getChemicalAreas(233, 1, 100);\r\n  }\r\n\r\n  async getChemicalAreas(facilityId, pageIndex, pageSize) {\r\n    await fetch(`/api/v1/Facility/${facilityId}/ChemicalAreas?pageIndex=${pageIndex}&pageSize=${pageSize}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      var myChemicalAreas = data;\r\n\r\n      this.setState({\r\n        data: myChemicalAreas,\r\n      })\r\n      \r\n      //console.log(this.state.data);\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  }\r\n\r\n  onItemClick = (event) => {\r\n    event.item.selected = !event.item.selected;\r\n    this.forceUpdate();\r\n  }\r\n\r\n  onExpandChange = (event) => {\r\n      event.item.expanded = !event.item.expanded;\r\n      this.forceUpdate();\r\n  }\r\n\r\n  render() {\r\n    const myChemicalAreas = this.state.data.map((myChemicalArea) => {\r\n      return (\r\n        <TreeView\r\n          data={myChemicalArea}\r\n          textField={myChemicalArea.name}\r\n          expandIcons={true}\r\n          onExpandChange={this.onExpandChange}\r\n          onItemClick={this.onItemClick}\r\n          aria-multiselectable={true}\r\n        />\r\n      )\r\n    });\r\n    //const myChemicalAreasJson = JSON.stringify(myChemicalAreas);\r\n\r\n    return (\r\n        <div className=\"content\">\r\n        <div id=\"chemicalAreaLedgerHeader\" className=\"ledgerTitle\">Chemical Area Ledger</div>\r\n        <br/>\r\n        <div>\r\n        {myChemicalAreas}\r\n        </div>  \r\n        </div>\r\n    )\r\n  }\r\n} \r\n\r\nexport default ChemicalAreaLedger;"]},"metadata":{},"sourceType":"module"}