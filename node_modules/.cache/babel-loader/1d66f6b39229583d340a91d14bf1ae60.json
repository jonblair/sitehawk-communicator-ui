{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jblair\\\\Desktop\\\\React\\\\sitehawk-communicator-ui\\\\src\\\\components\\\\chemical-area-ledger\\\\chemical-area-ledger.js\";\nimport React from \"react\";\nimport { Accordion, Button } from 'react-bootstrap';\nimport \"../chemical-area-ledger/chemical-area-ledger.css\";\nimport \"../../styles/ledgers/ledgers.css\";\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nclass ChemicalAreaLedger extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chemicalAreas: []\n    };\n  }\n\n  componentDidMount() {\n    this.getChemicalAreas(233, 1, 100);\n  }\n\n  async getChemicalAreas(facilityId, pageIndex, pageSize) {\n    await fetch(`/api/v1/Facility/${facilityId}/ChemicalAreas?pageIndex=${pageIndex}&pageSize=${pageSize}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        chemicalAreas: data\n      });\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n\n  render() {\n    // const chemicalAreasList = this.state.chemicalAreas.map((myChemicalArea, index) => (\n    //   <p key={index}>{myChemicalArea.name}</p>\n    // ))\n    // function ParentChemicalAreaCard(props) {\n    //   return (\n    //     <button onClick={props.onClick}>\n    //       Login\n    //     </button>\n    //   );\n    // }\n    // function ChildChemicalAreaCard(props) {\n    //   return (\n    //     <button onClick={props.onClick}>\n    //       Login\n    //     </button>\n    //   );\n    // }\n    function ChemicalAreaAccoridan(props) {\n      return React.createElement(Accordion, {\n        defaultActiveKey: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Click me!\")), React.createElement(Accordion.Collapse, {\n        eventKey: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Hello! I'm the body\"))), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Click me!\")), React.createElement(Accordion.Collapse, {\n        eventKey: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Hello! I'm another body\"))));\n    }\n\n    function ChemicalAreaCards(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, props.chemicalAreas.map((myChemicalArea, index) => React.createElement(\"div\", {\n        key: index,\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, myChemicalArea.name), React.createElement(\"h6\", {\n        className: \"card-subtitle mb-2 text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, myChemicalArea.description), React.createElement(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Use: \", myChemicalArea.areaOfUse.areaOfUse)))));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chemicalAreaLedgerHeader\",\n      className: \"ledgerTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Chemical Area Ledger\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(ChemicalAreaAccoridan, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ChemicalAreaLedger;","map":{"version":3,"sources":["C:/Users/jblair/Desktop/React/sitehawk-communicator-ui/src/components/chemical-area-ledger/chemical-area-ledger.js"],"names":["React","Accordion","Button","ChemicalAreaLedger","Component","constructor","props","state","chemicalAreas","componentDidMount","getChemicalAreas","facilityId","pageIndex","pageSize","fetch","method","headers","localStorage","getItem","then","response","json","data","setState","catch","error","console","render","ChemicalAreaAccoridan","ChemicalAreaCards","map","myChemicalArea","index","name","description","areaOfUse"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Accordion, Button } from 'react-bootstrap';\r\n\r\nimport \"../chemical-area-ledger/chemical-area-ledger.css\";\r\nimport \"../../styles/ledgers/ledgers.css\";\r\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nclass ChemicalAreaLedger extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      chemicalAreas: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getChemicalAreas(233, 1, 100);\r\n  }\r\n\r\n  async getChemicalAreas(facilityId, pageIndex, pageSize) {\r\n    await fetch(`/api/v1/Facility/${facilityId}/ChemicalAreas?pageIndex=${pageIndex}&pageSize=${pageSize}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      this.setState({\r\n        chemicalAreas: data,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    // const chemicalAreasList = this.state.chemicalAreas.map((myChemicalArea, index) => (\r\n    //   <p key={index}>{myChemicalArea.name}</p>\r\n    // ))\r\n\r\n    // function ParentChemicalAreaCard(props) {\r\n    //   return (\r\n    //     <button onClick={props.onClick}>\r\n    //       Login\r\n    //     </button>\r\n    //   );\r\n    // }\r\n\r\n    // function ChildChemicalAreaCard(props) {\r\n    //   return (\r\n    //     <button onClick={props.onClick}>\r\n    //       Login\r\n    //     </button>\r\n    //   );\r\n    // }\r\n\r\n    function ChemicalAreaAccoridan(props) {\r\n      return (\r\n        <Accordion defaultActiveKey=\"0\">\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                Click me!\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <Card.Body>Hello! I'm the body</Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                Click me!\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <Card.Body>Hello! I'm another body</Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        </Accordion>\r\n      )\r\n    }\r\n\r\n    function ChemicalAreaCards(props) {\r\n      return (\r\n        <div>\r\n            {props.chemicalAreas.map((myChemicalArea, index) => (\r\n              <div key={index} className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{myChemicalArea.name}</h5>\r\n                  <h6 className=\"card-subtitle mb-2 text-muted\">{myChemicalArea.description}</h6>\r\n                  <p className=\"card-text\">Use: {myChemicalArea.areaOfUse.areaOfUse}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n        <div id=\"chemicalAreaLedgerHeader\" className=\"ledgerTitle\">Chemical Area Ledger</div>\r\n        <br/>\r\n        <div>\r\n          <ChemicalAreaAccoridan />\r\n        </div>  \r\n        </div>\r\n    )\r\n  }\r\n} \r\n\r\nexport default ChemicalAreaLedger;"]},"metadata":{},"sourceType":"module"}