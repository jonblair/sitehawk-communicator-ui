{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jblair\\\\Desktop\\\\React\\\\sitehawk-communicator-ui\\\\src\\\\components\\\\user-management\\\\user-management.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Grid, GridColumn as Column } from '@progress/kendo-react-grid';\nimport { ExcelExport, ExcelExportColumn, ExcelExportColumnGroup } from '@progress/kendo-react-excel-export';\nimport \"../user-management/user-management.css\";\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../../styles/ledgers/ledgers.css\";\nimport '../../../node_modules/@progress/kendo-theme-bootstrap/dist/all.css';\n\nclass UserManagement extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.export = () => {\n      this._export.save();\n    };\n\n    this.pageChange = event => {\n      this.setState({\n        skip: event.page.skip,\n        take: event.page.take\n      });\n    };\n\n    this.state = {\n      users: [],\n      skip: 0,\n      take: 25\n    };\n  }\n\n  componentDidMount() {\n    this.getUsers(233, this.state.page, this.state.size);\n  }\n\n  async getUsers(facilityId, pageIndex, pageSize) {\n    await fetch(`/api/v1/Facility/${facilityId}/Users`, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        users: data\n      });\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n\n  render() {\n    function UserStatus(props) {\n      const myUserStatus = props.status;\n\n      if (myUserStatus) {\n        return \"Active\";\n      }\n\n      return \"Inactive\";\n    }\n\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"userManagementHeader\",\n      className: \"ledgerTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"User Management\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"k-button\",\n      onClick: this.export,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Export to Excel\"), React.createElement(ExcelExport, {\n      data: this.state.users,\n      fileName: \"Users.xlsx\",\n      ref: exporter => {\n        this._exporter = exporter;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(ExcelExportColumn, {\n      field: \"lastName\",\n      title: \"Last Name\",\n      width: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(ExcelExportColumn, {\n      field: \"firstName\",\n      title: \"First Name\",\n      width: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(ExcelExportColumn, {\n      field: \"userName\",\n      title: \"User Name\",\n      width: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(ExcelExportColumn, {\n      field: \"userType.name\",\n      title: \"User Type\",\n      width: 250,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(ExcelExportColumn, {\n      field: \"status\",\n      title: \"Status\",\n      width: 150,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      style: {\n        height: \"430px\"\n      },\n      data: this.state.users.slice(this.state.skip, this.state.take + this.state.skip),\n      skip: this.state.skip,\n      take: this.state.take,\n      total: this.state.users.length,\n      pageable: true,\n      onPageChange: this.pageChange,\n      sortable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Column, {\n      field: \"lastName\",\n      title: \"Last Name\",\n      width: \"300px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Column, {\n      field: \"firstName\",\n      title: \"First Name\",\n      width: \"300px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Column, {\n      field: \"userName\",\n      title: \"User Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Column, {\n      field: \"userType.name\",\n      title: \"User Type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Column, {\n      field: \"status\",\n      title: \"Status\",\n      width: \"150px\",\n      filter: \"boolean\",\n      cell: props => React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(UserStatus, {\n        status: props.dataItem[props.field],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default UserManagement;","map":{"version":3,"sources":["C:/Users/jblair/Desktop/React/sitehawk-communicator-ui/src/components/user-management/user-management.js"],"names":["React","ReactDOM","Grid","GridColumn","Column","ExcelExport","ExcelExportColumn","ExcelExportColumnGroup","UserManagement","Component","constructor","props","export","_export","save","pageChange","event","setState","skip","page","take","state","users","componentDidMount","getUsers","size","facilityId","pageIndex","pageSize","fetch","method","headers","localStorage","getItem","then","response","json","data","catch","error","console","render","UserStatus","myUserStatus","status","exporter","_exporter","height","slice","length","dataItem","field"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { Grid, GridColumn as Column } from '@progress/kendo-react-grid';\r\nimport { ExcelExport, ExcelExportColumn, ExcelExportColumnGroup } from '@progress/kendo-react-excel-export';\r\n\r\nimport \"../user-management/user-management.css\";\r\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"../../styles/ledgers/ledgers.css\";\r\nimport '../../../node_modules/@progress/kendo-theme-bootstrap/dist/all.css';\r\n\r\nclass UserManagement extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        users: [],\r\n        skip: 0,\r\n        take: 25,\r\n      };\r\n  }\r\n\r\n  _export;\r\n  export = () => {\r\n      this._export.save();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUsers(233, this.state.page, this.state.size);\r\n  }\r\n\r\n  pageChange = (event) => {\r\n    this.setState({\r\n        skip: event.page.skip,\r\n        take: event.page.take\r\n    });\r\n  }\r\n\r\n  async getUsers(facilityId, pageIndex, pageSize) {\r\n    await fetch(`/api/v1/Facility/${facilityId}/Users`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      this.setState({\r\n        users: data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    function UserStatus(props) {\r\n        const myUserStatus = props.status;\r\n        if (myUserStatus) {\r\n          return \"Active\";\r\n        }\r\n        return \"Inactive\";\r\n      }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n        <div id=\"userManagementHeader\" className=\"ledgerTitle\">User Management</div>\r\n        <br/>\r\n        <div>\r\n          <button className=\"k-button\" onClick={this.export}>Export to Excel</button>\r\n\r\n          <ExcelExport\r\n              data={this.state.users}\r\n              fileName=\"Users.xlsx\"\r\n              ref={(exporter) => { this._exporter = exporter; }}\r\n          >\r\n              <ExcelExportColumn field=\"lastName\" title=\"Last Name\" width={300} />\r\n              <ExcelExportColumn field=\"firstName\" title=\"First Name\" width={300} />\r\n              <ExcelExportColumn field=\"userName\" title=\"User Name\" width={300} />\r\n              <ExcelExportColumn field=\"userType.name\" title=\"User Type\" width={250} />\r\n              <ExcelExportColumn field=\"status\" title=\"Status\" width={150} />\r\n          </ExcelExport>\r\n        </div>\r\n        <div>\r\n            <Grid\r\n                style={{ height: \"430px\" }}\r\n                data={this.state.users.slice(this.state.skip, this.state.take + this.state.skip)} \r\n                skip={this.state.skip}\r\n                take={this.state.take}\r\n                total={this.state.users.length}\r\n                pageable={true}\r\n                onPageChange={this.pageChange}\r\n                sortable={true}\r\n                >\r\n                <Column field=\"lastName\" title=\"Last Name\" width=\"300px\" />\r\n                <Column field=\"firstName\" title=\"First Name\" width=\"300px\" />\r\n                <Column field=\"userName\" title=\"User Name\" />\r\n                <Column field=\"userType.name\" title=\"User Type\" />\r\n                <Column\r\n                    field=\"status\" title=\"Status\" width=\"150px\" filter=\"boolean\"\r\n                    cell={props => (\r\n                        <td>\r\n                            <UserStatus status={props.dataItem[props.field]}/>\r\n                        </td>\r\n                    )}\r\n                />\r\n            </Grid>\r\n        </div>  \r\n        </div>\r\n    )\r\n  }\r\n} \r\n\r\nexport default UserManagement;"]},"metadata":{},"sourceType":"module"}